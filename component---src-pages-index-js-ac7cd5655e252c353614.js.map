{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["availableTags","Array","from","Set","standups","map","standup","tags","filter","Boolean","tagColors","getTagColors","IndexPage","useState","visiblestandups","setVisiblestandups","currentTag","setCurrentTag","title","className","tag","onClick","includes","filterStandupsByTag","style","backgroundColor","fontWeight","opacity","key","Math","floor","random","length"],"mappings":"iTAYMA,EAAgBC,MAAMC,KAAK,IAAIC,IAAI,IAAUC,IAASC,KAAI,SAACC,GAAD,OAAaA,EAAQC,SAAOC,OAAOC,WAC7FC,EAAYC,cA4DHC,UA1DG,WAAO,IAAD,EACwBC,mBAAST,KAAhDU,EADe,KACEC,EADF,OAEcF,qBAA7BG,EAFe,KAEHC,EAFG,KAGtB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,yBAAKC,UAAU,aACb,yBAAKA,UAAU,eAAf,0JAGA,yBAAKA,UAAU,QAEXnB,EAAcK,KAAI,SAACe,GAAD,OAChB,4BACED,UAAU,iBACVE,QAAS,WACPJ,EAAcG,GACdL,EAtBU,SAACX,EAAUgB,GAAX,OAAmBhB,EAASI,QAAO,SAACF,GAAD,OAAaA,EAAQC,MAAQD,EAAQC,KAAKe,SAASF,MAsB7EG,CAAoBnB,IAAUgB,KAEnDI,MAAO,CACLC,gBAAiBf,EAAUU,GAC3BM,WAAYN,IAAQJ,EAAa,OAAS,SAC1CW,QAAUX,GAAcI,IAAQJ,EAAiB,GAAJ,GAE/CY,IAAKR,GAEJA,MAIP,6BACE,4BACED,UAAU,iBACVE,QAAS,WACPJ,IACAF,EAAmBX,OAJvB,YASA,4BAAQe,UAAU,wBAChBE,QAAS,WACPN,EAAmB,CAACX,IAASyB,KAAKC,MAAMD,KAAKE,SAAW3B,IAAS4B,WACjEf,MAHJ,aAUJ,yBAAKE,UAAU,YACZL,EAAgBT,KAAI,SAACC,GAAD,OAAa,kBAAC,IAAD,CAASsB,IAAKtB,EAAQY,MAAOZ,QAASA,EAASI,UAAWA","file":"component---src-pages-index-js-ac7cd5655e252c353614.js","sourcesContent":["import React, { useState } from 'react'\nimport _ from 'lodash'\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport \"../components/standup.css\"\nimport Standup from \"../components/standup\"\nimport standups from \"../standup-data\"\nimport getTagColors from \"../get-tag-colors\"\n\nconst filterStandupsByTag = (standups, tag) => standups.filter((standup) => standup.tags && standup.tags.includes(tag));\n\nconst availableTags = Array.from(new Set(_.flatten(standups.map((standup) => standup.tags)).filter(Boolean)));\nconst tagColors = getTagColors();\n\nconst IndexPage = () => {\n  const [visiblestandups, setVisiblestandups] = useState(standups)\n  const [currentTag, setCurrentTag] = useState()\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <div className=\"container\">\n        <div className=\"description\">\n          Tired of having the same old Zoom call every day? Use these fun and creative standup formats to mix things up and learn more about your team and work.\n        </div>\n        <div className=\"tags\">\n          {\n            availableTags.map((tag) => (\n              <button\n                className=\"tag tag-button\"\n                onClick={() => {\n                  setCurrentTag(tag)\n                  setVisiblestandups(filterStandupsByTag(standups, tag))\n                }}\n                style={{\n                  backgroundColor: tagColors[tag],\n                  fontWeight: tag === currentTag ? 'bold' : 'normal',\n                  opacity: !currentTag || tag === currentTag ? 1 : 0.5\n                }}\n                key={tag}\n              >\n                {tag}\n              </button>\n            ))\n          }\n          <div>\n            <button\n              className=\"tag tag-button\"\n              onClick={() => {\n                setCurrentTag()\n                setVisiblestandups(standups)\n              }}\n            >\n              show all\n            </button>\n            <button className=\"tag tag-button random\"\n              onClick={() => {\n                setVisiblestandups([standups[Math.floor(Math.random() * standups.length)]])\n                setCurrentTag()\n              }}\n            >\n              random!\n            </button>\n          </div>\n        </div>\n        <div className=\"standups\">\n          {visiblestandups.map((standup) => <Standup key={standup.title} standup={standup} tagColors={tagColors}></Standup>)}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}